apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 16
        versionCode 1001
        versionName "1.0.1"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
}

uploadArchives {
    String mavenRepoURL = System.getenv('MAVEN_REPO_RELEASE_URL') ?: ''
    String nexusUserName = System.getenv("NEXUS_USERNAME") ?: ''
    String nexusPassword = System.getenv("NEXUS_PASSWORD") ?: ''
    String mavenGroupId = 'com.jiandanlangman'
    String extension = 'aar'
    String mavenArtifactId = 'recyclerview2'
    String versionName = android.defaultConfig.versionName

    gradle.buildStarted {
        if ('' == mavenRepoURL || '' == nexusUserName || '' == nexusPassword) {
            String exception = 'undefined param NEXUS_USERNAME and param NEXUS_PASSWORD.'
            println(exception)
            throw IllegalArgumentException(exception)
        }
    }

    repositories {
        mavenDeployer {
            repository(url: mavenRepoURL) {
                authentication(userName: nexusUserName, password: nexusPassword)
            }
            pom.project {
                version versionName
                artifactId mavenArtifactId
                groupId mavenGroupId
                packaging extension
            }
        }
    }

    gradle.buildFinished {
        if ('' != mavenRepoURL && '' != nexusUserName && '' != nexusPassword) {
            String mavenGroupPath = mavenGroupId.replace(".", "/")
            println("Upload success, URL: $mavenRepoURL/$mavenGroupPath/$mavenArtifactId/$versionName/$mavenArtifactId-$versionName.$extension")
        }
    }
}